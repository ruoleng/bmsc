name: build release apks

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build Artifacts and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Ninja
        run: sudo apt-get -y install build-essential ninja-build cmake pkg-config libgtk-3-dev
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: "17"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: 'stable'
      - run: flutter --version


      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          tagRegex: 'v([0-9]+.[0-9]+.[0-9]+)' # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.

      - name: Replace YAML version with tag version
        run: |
          sed -i 's/99.99.99/'$GIT_TAG_NAME'/g' pubspec.yaml|
          echo "Tag used version:"$GIT_TAG_NAME

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Pub Get Packages
        run: flutter pub get

      - name: Build apks
        run: flutter build apk --release --split-per-abi
      
      - name: Build linux executable
        run: flutter build linux --release

      - name: Extract Changelog
        id: changelog
        run: |
          VERSION_V="${{ steps.tagName.outputs.tag }}"
          VERSION=$(echo $VERSION_V | sed 's/^v//')
          echo "Extracting changelog for version $VERSION"
          awk "/^# $VERSION\$/{p=1;next} /^# /{p=0} p" changelog.md > changelog_content.txt
          echo "got changelog content"
          cat changelog_content.txt
          echo "changelog<<EOF" >> $GITHUB_ENV
          cat changelog_content.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Prepare Release Files
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-arm64-v8a-release.apk ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm64.apk
          mv app-armeabi-v7a-release.apk ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm32.apk
          mv app-x86_64-release.apk ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-x64.apk
          cd ../../../..
          cd build/linux/x64/release/bundle/
          zip -r ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip .
          mv ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip ../../../../../

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm64.apk
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm32.apk
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-x64.apk
            ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip
          token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
          body: ${{ env.changelog }}

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm64.apk
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm32.apk
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-x64.apk
            ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip
