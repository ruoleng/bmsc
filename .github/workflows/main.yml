name: Build and Release All Platforms

on:
  # 1. 当一个 'v*.*.*' 格式的标签被推送时触发
  push:
    tags:
      - "v*.*.*"
  # 2. 允许在 Actions 页面手动触发此工作流
  workflow_dispatch:
    inputs:
      tag:
        description: '请输入要构建的 Git 标签 (例如: v1.2.3)'
        required: true
        type: string

jobs:
  # JOB 1: Build for Android and Linux
  build-android-linux:
    name: Build Android and Linux
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - uses: actions/checkout@v3
        with:
          # 如果是手动触发, checkout 指定的 tag; 否则 checkout 事件触发的 ref
          ref: ${{ github.event.inputs.tag || github.ref }}
      - name: Install Ninja
        run: sudo apt-get -y install build-essential ninja-build cmake pkg-config libgtk-3-dev
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: "17"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: 'stable'
      - run: flutter --version

      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          # 使用手动输入的 tag 或事件触发的 ref
          tag: ${{ github.event.inputs.tag || github.ref }}
          tagRegex: 'v([0-9]+.[0-9]+.[0-9]+)'
          tagRegexGroup: 1

      - name: Replace YAML version with tag version
        run: |
          sed -i 's/99.99.99/'${{ steps.tagName.outputs.tag }}'/g' pubspec.yaml
          echo "Tag used version:"${{ steps.tagName.outputs.tag }}

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Pub Get Packages
        run: flutter pub get

      - name: Build apks
        run: flutter build apk --release --split-per-abi
      
      - name: Build linux executable
        run: flutter build linux --release

      - name: Extract Changelog
        id: changelog
        run: |
          VERSION_V="v${{ steps.tagName.outputs.tag }}"
          VERSION=$(echo $VERSION_V | sed 's/^v//')
          echo "Extracting changelog for version $VERSION"
          awk "/^# $VERSION\$/{p=1;next} /^# /{p=0} p" changelog.md > changelog_content.txt
          echo "got changelog content"
          cat changelog_content.txt
          echo "changelog<<EOF" >> $GITHUB_ENV
          cat changelog_content.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Prepare Release Files
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-arm64-v8a-release.apk ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm64.apk
          mv app-armeabi-v7a-release.apk ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm32.apk
          mv app-x86_64-release.apk ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-x64.apk
          cd ../../../..
          cd build/linux/x64/release/bundle/
          zip -r ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip .
          mv ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip ../../../../../

      - name: Upload Android & Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-linux-artifacts
          path: |
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm64.apk
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-arm32.apk
            build/app/outputs/flutter-apk/${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-x64.apk
            ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-linux.zip

  # JOB 2: Build for iOS (Unsigned)
  build-ios:
    name: Build iOS IPA (Unsigned)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # 如果是手动触发, checkout 指定的 tag; 否则 checkout 事件触发的 ref
          ref: ${{ github.event.inputs.tag || github.ref }}
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: 'stable'
      - run: flutter --version

      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          # 使用手动输入的 tag 或事件触发的 ref
          tag: ${{ github.event.inputs.tag || github.ref }}
          tagRegex: 'v([0-9]+.[0-9]+.[0-9]+)'
          tagRegexGroup: 1

      - name: Replace YAML version with tag version
        run: |
          sed -i '' 's/99.99.99/'${{ steps.tagName.outputs.tag }}'/g' pubspec.yaml
          echo "Tag used version:"${{ steps.tagName.outputs.tag }}

      - name: Pub Get Packages
        run: flutter pub get

      - name: Build unsigned iOS App
        run: flutter build ios --release --no-codesign

      - name: Package IPA
        run: |
          cd build/ios/iphoneos/
          mkdir Payload
          mv Runner.app Payload/
          zip -r ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-ios.ipa Payload/
          mv *.ipa ../../../

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-artifact
          path: ${{ github.event.repository.name }}-v${{ steps.tagName.outputs.tag }}-ios.ipa

  # JOB 3: Create the final release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android-linux, build-ios]
    steps:
      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        with:
          # 使用手动输入的 tag 或事件触发的 ref
          tag: ${{ github.event.inputs.tag || github.ref }}
          tagRegex: 'v([0-9]+.[0-9]+.[0-9]+)'
          tagRegexGroup: 1

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: List files for debugging
        run: ls -R artifacts/
      
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/**/*"
          token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
          tag: "v${{ steps.tagName.outputs.tag }}"
          body: ${{ needs.build-android-linux.outputs.changelog }}
